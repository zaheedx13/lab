onlinebookset


<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.onlinebook</groupId>
  <artifactId>onlinebook</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>OnlineBook Webapp</name>
  <url>https://github.com/anujyog1/onlinebookSet3repo</url>

  <properties>
    <!-- encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Use Java LTS version 17 (change to 21 only if you have JDK21 and Maven that supports it) -->
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.release>17</maven.compiler.release>

    <!-- plugin versions -->
    <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
    <maven.surefire.plugin.version>3.0.0-M7</maven.surefire.plugin.version>
    <maven.war.plugin.version>3.3.2</maven.war.plugin.version>
  </properties>

  <dependencies>
    <!-- Servlet API (provided by container like Tomcat) -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>4.0.1</version>
      <scope>provided</scope>
    </dependency>

    <!-- If the project uses JSPs -->
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>javax.servlet.jsp-api</artifactId>
      <version>2.3.3</version>
      <scope>provided</scope>
    </dependency>

    <!-- JUnit for tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>onlinebook</finalName>

    <plugins>
      <!-- Compiler plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <release>${maven.compiler.release}</release>
        </configuration>
      </plugin>

      <!-- Surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
      </plugin>

      <!-- WAR plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven.war.plugin.version}</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <scm>
    <url>https://github.com/anujyog1/onlinebookSet3repo</url>
    <connection>scm:git:https://github.com/anujyog1/onlinebookSet3repo.git</connection>
    <developerConnection>scm:git:git@github.com:anujyog1/onlinebookSet3repo.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
</project>



# backup
cp pom.xml pom.xml.bak

# replace pom.xml with the recommended content (paste into file)
# then
mvn -v
javac -version
mvn validate
mvn -DskipTests clean package

# if build OK:
git checkout -b fix/pom
git add pom.xml
git commit -m "Fix POM configuration and dependencies"
git push -u origin fix/pom
