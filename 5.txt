version: "3.8"

services:
  campus-app:
    image: yourdockerhubusername/campusmgmtsystem:latest
    container_name: campus_app
    ports:
      - "7079:8080"         # host:container -> host 7079 maps to container 8080 (adjust container port if different)
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://campus-mongo:27017/campusdb
      # OR if your app expects separate vars:
      # - MONGO_HOST=campus-mongo
      # - MONGO_PORT=27017
      # - MONGO_DB=campusdb
    depends_on:
      - campus-mongo
    restart: always
    networks:
      - campus-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  campus-mongo:
    image: mongo:6.0
    container_name: campus_mongo
    ports:
      - "27017:27017"       # optional - exposes DB to host (remove if not needed)
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=campusdb
      # - MONGO_INITDB_ROOT_USERNAME=admin   # optional if you want auth
      # - MONGO_INITDB_ROOT_PASSWORD=secret  # then configure app to use credentials
    restart: always
    networks:
      - campus-net
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongo_data:

networks:
  campus-net:
    driver: bridge



docker-compose up -d




docker-compose ps
docker-compose logs -f campus-app




docker-compose down -v   # -v will remove the named volumes (mongo_data)



